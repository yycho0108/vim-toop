*vim-toop.txt*		For Vim version 8.1	Last change: 2020 May 25

Easily map operations over text-objects

Author:  Jean Carlo Machado <https://jeancarlomachado.net/>:

INTRODUCTION                                    *toop*

Create custom text-object operations.

Toop stands for Text Objects OPerations.

You map a keystroke to a behaviour that can be applied on text-objects.

Examples                                        *toop-examples*


    "make json objects beautiful
    call toop#mapShell('jq .', '<leader>jb')

    "make markdown numbered list
    call toop#mapShell("awk 'BEGIN { c=1 } // { print c\". \"$0; c = c+1 }'", '<leader>nl')




functions                                       *toop-functions*



toop#mapShell                                   *toop#mapShell*

Maps a shell call, receives input on stdin and replaces the result with the stdout.

Example: call toop#mapShell('jq .', '<leader>jb')


toop#mapFunction                                *toop#mapFunction*


Maps a vim function and replaces the content with the result

Example:

function! Duplicate(string)
    return a:string.a:string
endfun
call toop#mapFunction('Duplicate', "<leader>2x")


toop#mapAround                                  *toop#mapAroun*


Convenience function to add content around the text object.
Allows a different content for the left and right side.

Example:

call toop#mapAround("```sh\n", "\n```", '<leader>c')



ABOUT                                           *toop-about*

Grab the latest version or report a bug on GitHub:

https://github.com/jeanCarloMachado/vim-toop

vim:tw=78:et:ft=help:norl:
